export const projects = [
    {
      title: 'ViT: Vision Transformer',
      description: 'An implementation of the Vision Transformer in Pytorch. ViT processes an input image as a sequence of patches and then feeds these patches to a transformer-based network.',
      image: '/images/vit.png',
      tags: ['PyTorch'],
      source: 'https://github.com/rudyorre/vit',
      visit: '',
      id: 0,
      featured: true,
    },
    {
      title: 'Parts-of-Speech Tagger',
      description: 'Parts-Of-Speech (POS) tagger using Hidden Markov Models (HMM) and the Viterbi algorithm. Trained on a pre-tagged corpus and integrates NLTK\'s version for comparison.',
      image: '/images/pos-tagger.jpg',
      tags: ['Python', 'NLTK'],
      source: 'https://github.com/rudyorre/pos-tagger',
      visit: '',
      id: 0,
      featured: true,
    },
    {
      title: 'N-Gram Language Model',
      description: 'An n-gram language model that implements add-k smoothing and greedy sentence generation. This model probabilistically predicts the rest of a sentence via an (n - 1)-order Markov model.',
      image: '/images/ngram.png',
      tags: ['Python', 'NLTK'],
      source: 'https://github.com/rudyorre/ngram',
      visit: '',
      id: 0,
      featured: true,
    },
    {
      title: 'Brewin',
      description: 'An interpreted and statically typed programming language built in pure Python. Includes I/O, primitives, objects, looping, functions and lexical scoping. Also supports error handling.',
      image: '/images/brewin-logo.png',
      tags: ['Python'],
      source: 'https://github.com/rudyorre/brewin',
      visit: '',
      id: 0,
      featured: true,
    },
    {
      title: 'TensorFaux',
      description: "A neural network implementation which utilizes a similar API to TensorFlow Keras. Written in just Python/Numpy, and includes a documentation website and is accessible via PIP.",
        image: '/images/tensorfaux.png',
        tags: ['Python', 'Numpy', 'PIP'],
      source: 'https://github.com/rudyorre/TensorFaux',
      visit: 'https://rudyorre.github.io/TensorFaux',
      id: 0,
      featured: true,
    },
    {
      title: 'Scramble! Web App',
      description: "Matches users to restaurants based off of their preferences using a swiping feature similar to Tinder. User filters and preferences persist via MongoDB.",
        image: '/images/scramble.png',
        // tags: ['Mongo', 'Express', 'React', 'Node', "Yelp Fusion"],
        tags: ['MERN', 'Yelp API'],
      source: 'https://github.com/rudyorre/restaurant-tinder',
      visit: '',
      id: 0,
      featured: true,
    },
    {
      title: 'Cannabis Sales Forecasting',
      description: "Developed a predictive model for sales forecasting and determined key success factors using ensemble methods such as Random Forest and Gradient Boosting.",
        image: '/images/cookies.png',
        tags: ['Pandas', 'Sci-Kit Learn'],
      source: 'https://github.com/rudyorre/m148-project3',
      visit: '',
      id: 1,
      featured: true,
    },
    {
      title: 'Multivariable Linear Regression',
      description: 'Statistical model that uses N parameters to predict the outcome of the response variable. Implemented with the gradient descent aglorithm purely in C++.',
        image: '/images/multivariatelinearregression.png',
        tags: ['C++'],
      source: 'https://github.com/rudyorre/machine-learning-projects/tree/master/Multivariate-Linear-Regression',
      visit: '',
      id: 2,
      featured: true,
    },
    {
      title: 'C++ Shared Pointer',
      description: "Simulates the C++ implementation of the shared pointer. This implementation has all of the important features, including templating so any object can be pointed to.",
      image: '/images/smartpointer.png',
      tags: ['C++'],
      source: 'https://github.com/rudyorre/smart-shared-ptr',
      visit: '',
      id: 3,
      featured: false,
    },
    {
      title: 'C++ Map (BST Container)',
      description: "Implemented a C++ Map container built upon a binary search tree. Templated so any objects can be mapped, and prevents memory leaks in case of a allocation error.",
        image: '/images/bstmap.png',
        tags: ['C++'],
      source: 'https://github.com/rudyorre/El-Camino-College/tree/main/CS-30/Project%201.2%20-%20Map%20(Binary%20Search%20Tree)',
      visit: '',
      id: 2,
      featured: false,
    },
    {
      title: 'Portfolio Site for Myself',
      description: "A simple website for showcasing some of my computer science projects. Static site built with React and hosted on Github Pages. More projects will be added in the near future.",
      image: '/images/portfolio.png',
      tags: ['React', 'NextJS'],
      source: 'https://github.com/rudyorre/rudyorre.com',
      visit: 'https://rudyorre.com/',
      id: 3,
      featured: true,
    },
  ];